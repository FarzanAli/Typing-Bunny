{"version":3,"sources":["components/toggleLight.js","components/header/paste.js","components/header/next.js","components/header/stats.js","components/header/header.js","components/typing-box/text.js","components/typing-box/typingBox.js","index.js"],"names":["ToggleLight","document","getElementsByClassName","item","addEventListener","documentElement","getAttribute","trans","setAttribute","classList","add","window","setTimeout","remove","type","className","style","width","height","Component","Paste","props","paste","bind","input","a","navigator","clipboard","readText","text","value","length","this","handlePasteCallback","onClick","color","Next","handleNextTextCallback","Stats","Math","round","accuracy","wpm","Header","Text","wordArray","typingText","push","i","j","slice","mappedWordArray","map","element","idx","id","letter","idy","runTimer","cursorIndex","undefined","k","children","current","innerHTML","handledErrors","includes","handledErrorsCallback","TypingBox","event","keyboardInput","key","data","inputCallback","toggleRunTimerCallback","errors","errorsCallback","Main","state","sampleTexts","sampleTextsIndex","seconds","setState","timer","setInterval","Infinity","clearInterval","bool","startTimer","index","resetTest","darkModeCallback","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.50fc20b2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { FaMoon } from 'react-icons/fa';\r\n\r\nexport default class ToggleLight extends Component{\r\n    \r\n    componentDidMount(){\r\n        document.getElementsByClassName(\"toggleLight-container\").item(0).addEventListener('mousedown', () => {\r\n            if(document.documentElement.getAttribute('theme') === \"light\"){\r\n                trans();\r\n                document.documentElement.setAttribute('theme', 'dark');\r\n            }\r\n            else if(document.documentElement.getAttribute('theme') === \"dark\"){\r\n                trans();\r\n                document.documentElement.setAttribute('theme', 'light');\r\n            }\r\n        });\r\n\r\n        let trans = () => {\r\n            document.documentElement.classList.add('transition');\r\n            window.setTimeout(() => {\r\n                document.documentElement.classList.remove('transition')\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button type=\"button\" className=\"toggleLight-container\">\r\n                <FaMoon style={{width: `100%`, height: `100%`}}/>\r\n            </button>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { FaPaste } from 'react-icons/fa';\r\nexport default class Paste extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.paste = this.paste.bind(this);\r\n  }\r\n\r\n  async paste(input) {\r\n    const text = await navigator.clipboard.readText();\r\n    input.value = text;\r\n    if(input.value.length !== 0){\r\n      this.props.handlePasteCallback(input.value);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"paste-container\" onClick={this.paste}>\r\n        <FaPaste style={{width: `65%`,height:`65%`, color: `#868686`}}/>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { IoIosShuffle } from 'react-icons/io';\r\n\r\nexport default class Next extends Component{\r\n    render(){\r\n        return(\r\n           <div className=\"next-container\" onClick={this.props.handleNextTextCallback}>\r\n               <IoIosShuffle style={{width: `70%`,height:`70%`, color: `var(--icon-color)`}}/>\r\n           </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nexport default class Stats extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"stats-container\">\r\n                <div className=\"accuracy-container\">\r\n                    Accuracy \r\n                    <div className=\"accuracy\">{Math.round(this.props.accuracy)}</div>\r\n                </div>\r\n                <div className=\"wpm-container\">\r\n                    WPM \r\n                    <div className=\"wpm\">{Math.round(this.props.wpm)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './header.css';\r\nimport Paste from './paste.js';\r\nimport Next from './next.js';\r\nimport Stats from './stats.js';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header-container\">\r\n        <Paste\r\n          handlePasteCallback={this.props.handlePasteCallback.bind(this)}\r\n        />\r\n        <Next\r\n          handleNextTextCallback={this.props.handleNextTextCallback}\r\n        />\r\n        <Stats\r\n          wpm={this.props.wpm}\r\n          accuracy={this.props.accuracy}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './text.css';\r\n\r\nfunction Text(props) {\r\n\r\n  let wordArray = [];\r\n  if (props.typingText.length === 1) {\r\n    wordArray.push(props.typingText[0]);\r\n  }\r\n  else {\r\n    for (let i = 0; i < props.typingText.length; i++) {\r\n      if (i === 0 || props.typingText[i] === \" \") {\r\n        if (props.typingText[i] === \" \") { i += 1; }\r\n        for (let j = i; j < props.typingText.length; j++) {\r\n          if (props.typingText[j] === \" \" || j === props.typingText.length - 1) {\r\n            wordArray.push(props.typingText.slice(i, j + 1));\r\n            i = j + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let mappedWordArray = wordArray.map((element, idx) => (\r\n    <div className=\"word\" key={idx} id={idx}>\r\n      {\r\n        [...element].map((letter, idy) => (\r\n          idx === 0 && idy === 0 && props.input.length === 0 ? (<div className=\"letter-active\" key={idy} id={idy}>{letter}</div>) :\r\n\r\n            letter === \" \" ? (<div className=\"letter\" key={idy} id={idy}>&nbsp;</div>) :\r\n              (<div className=\"letter\" key={idy} id={idy}>{letter}</div>)\r\n        ))\r\n      }\r\n    </div>\r\n  ));\r\n\r\n  if(props.input.length === 0 && document.getElementsByClassName(\"letter-active\").length > 1 && props.runTimer){\r\n    document.getElementsByClassName(\"letter-active\").item(1).className = \"letter\";\r\n  }\r\n  else if (props.input.length > 0 && props.input.length < props.typingText.length && props.runTimer) {\r\n    //cursor\r\n    //Second Implementation\r\n    /*\r\n      Does not depend on \"letter\" classes to move cursor, instead depends on \"word\" class and indexes\r\n      through to put the cursor on the index that immediately follows whatever value input.length is.\r\n    */\r\n    let cursorIndex = 0;\r\n    for(let i = 0; i < wordArray.length; i++){\r\n      for(let j = 0; j < wordArray[i].length; j++){\r\n        if(cursorIndex === props.input.length){\r\n          //Fixes bug in which cursor leaves trail 1 letter activated when backspacing.\r\n          if(document.getElementsByClassName(\"letter-active\")[1] !== undefined){\r\n            if(j < document.getElementsByClassName(\"letter-active\")[1].id){\r\n              document.getElementsByClassName(\"letter-active\")[1].className = \"letter\";\r\n            }\r\n            else if(j > document.getElementsByClassName(\"letter-active\")[1].id){\r\n              document.getElementsByClassName(\"letter-active\")[1].className = \"letter\";\r\n\r\n            }\r\n          }\r\n          if(document.getElementsByClassName(\"letter-active\").length > 1){\r\n            for(let k = 0; k < document.getElementsByClassName(\"letter-active\").length; k++){\r\n              if(j !== document.getElementsByClassName(\"letter-active\").item(k).id){\r\n                document.getElementsByClassName(\"letter-active\").item(k).className = \"letter\";\r\n              }\r\n            } \r\n          }\r\n\r\n          document.getElementsByClassName(\"word\").item(i).children[j].className = \"letter-active\";\r\n          \r\n        }\r\n        cursorIndex++;\r\n      }\r\n    }\r\n    \r\n    //errors\r\n    //Second implementation\r\n    let current = 0;\r\n    for(let i = 0; i < wordArray.length; i++){\r\n      for(let j = 0; j < wordArray[i].length; j++){\r\n        if(current < props.input.length){\r\n          if(document.getElementsByClassName(\"word\").item(i).children[j].innerHTML === \"&nbsp;\" && props.input[current] !== \" \"){\r\n            document.getElementsByClassName(\"word\").item(i).children[j].className = \"letter-error\";\r\n          }\r\n          else if(document.getElementsByClassName(\"word\").item(i).children[j].innerHTML !== props.input[current]\r\n          && document.getElementsByClassName(\"word\").item(i).children[j].innerHTML !== \"&nbsp;\"){\r\n            document.getElementsByClassName(\"word\").item(i).children[j].className = \"letter-error\";\r\n          }\r\n        }\r\n        // if(current <= props.input.length && props.input[current] !== props.typingText[current] && props.handledErrors.includes(current) === false){\r\n        //   console.log(\"error\")\r\n        //   document.getElementsByClassName(\"word\").item(i).children[j].className = \"letter-error\";\r\n        //   props.handledErrorsCallback(current);\r\n        // }\r\n        current++;\r\n      }\r\n    }\r\n    \r\n  }\r\n  else if (props.input.length === props.typingText.length && props.runTimer === true) {\r\n    if(props.input[props.input.length - 1] !== props.typingText[props.input.length - 1] && props.handledErrors.includes(props.input.length - 1) === false){\r\n      document.getElementsByClassName(\"letter-active\").item(0).className = \"letter-error\"\r\n      props.handledErrorsCallback(props.input.length - 1);\r\n    }\r\n    else if(props.input[props.input.length - 1] === props.typingText[props.input.length - 1]){\r\n      document.getElementsByClassName(\"letter-active\").item(0).className = \"letter-finished\";\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"typing-text\">\r\n      {mappedWordArray}\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Text;","import React, { Component } from 'react';\r\nimport Text from './text.js';\r\n\r\nexport default class TypingBox extends Component {\r\n\r\n  componentDidMount() {\r\n    if(this.props.input.length < this.props.typingText.length){\r\n      document.addEventListener('keydown', (event) => {\r\n        this.keyboardInput(event.key)\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  keyboardInput(data) {\r\n    if (data === \"Backspace\" && this.props.input.length < this.props.typingText.length) {\r\n      this.props.inputCallback(data);\r\n    }\r\n    else if (data.length === 1 && this.props.input.length < this.props.typingText.length) {\r\n      if (this.props.input.length === 0) {\r\n        this.props.toggleRunTimerCallback(true);\r\n      }\r\n      this.props.inputCallback(data);\r\n    }\r\n    if(this.props.input.length === this.props.typingText.length && this.props.runTimer){\r\n      this.props.toggleRunTimerCallback(false);\r\n    }\r\n\r\n    let errors = 0;\r\n    for (let i = 0; i < this.props.input.length; i++) {\r\n      if (this.props.input[i] !== this.props.typingText[i]) {\r\n        errors++;\r\n      }\r\n    }\r\n    this.props.errorsCallback(errors);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"typing-box\">\r\n        <Text\r\n        input={this.props.input}\r\n        typingText={this.props.typingText}\r\n        handledErrors={this.props.handledErrors}\r\n        runTimer={this.props.runTimer}\r\n        handledErrorsCallback={this.props.handledErrorsCallback}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ToggleLight from './components/toggleLight.js';\nimport Header from './components/header/header.js';\nimport TypingBox from './components/typing-box/typingBox.js';\n\nexport default class Main extends Component{\n  \n  constructor(props){\n    super(props)\n    this.state = {\n      input: ``,\n      typingText: ` `,\n      sampleTexts: [`\"Do not go gentle into that good night; Old age should burn and rave at close of day. Rage, rage against the dying of the light.\" -Dylan Thomas, as quoted by Professor Brand`,\n                    `\"We are what we repeatedly do. Excellence, then, is not an act, but a habit\" - Aristotle`,\n                    `\"Your time is limited, so don't waste it living someone else's life. Don't be trapped by dogma - which is living with the results of other people's thinking.\" -Steve Jobs`],\n      sampleTextsIndex: 0,\n      runTimer: false,\n      seconds: 0,\n      wpm: 0,\n      accuracy: 0,\n      handledErrors: []\n    };\n  }\n\n  componentDidMount(){\n    this.handleNextTextCallback();\n  }\n\n  resetTest(){\n    this.setState({\n      input: ``,\n      runTimer: false,\n      seconds: 0,\n      wpm: 0,\n      accuracy: 0,\n      errors: 0,\n      handledErrors: [],\n    });\n    while(document.getElementsByClassName(\"letter-active\").length > 0) {\n      document.getElementsByClassName(\"letter-active\").item(0).className = \"letter\";\n    }\n    while(document.getElementsByClassName(\"letter-error\").length > 0){\n      document.getElementsByClassName(\"letter-error\").item(0).className = \"letter\";\n    }\n    while(document.getElementsByClassName(\"letter-finished\").length > 0){\n      document.getElementsByClassName(\"letter-finished\").item(0).className = \"letter\";\n    }\n    document.getElementsByClassName(\"word\").item(0).children[0].className = \"letter-active\"\n  }\n\n  startTimer(){\n\n    let timer = setInterval(() => {\n      this.setState({\n          seconds: this.state.seconds + 0.01,\n          wpm: ((this.state.input.length - this.state.errors)/5)/(this.state.seconds/60) === Infinity ? 999:\n               ((this.state.input.length - this.state.errors)/5)/(this.state.seconds/60),\n          accuracy: ((this.state.input.length - this.state.errors)/this.state.input.length)*100\n        })\n\n        if(this.state.runTimer === false){\n          clearInterval(timer);\n        }\n\n      }, 10);\n  }\n\n  toggleRunTimerCallback(bool){\n    this.setState({\n      runTimer: bool\n    }, () => {\n      if(this.state.runTimer === true){\n        this.startTimer();\n      }\n    });\n  }\n\n  inputCallback(data){\n    if(data === \"Backspace\"){\n      this.setState({\n        input: this.state.input.slice(0, this.state.input.length - 1)\n      });\n    }\n    else{\n      this.setState({\n        input: this.state.input + data\n      });\n    }\n  }\n\n  errorsCallback(errors){\n    this.setState({errors: errors});\n  }\n\n  handledErrorsCallback(index){\n    let handledErrors = this.state.handledErrors;\n    handledErrors.push(index);\n    this.setState({handledErrors: handledErrors})\n  }\n\n  handlePasteCallback(typingText){\n    this.setState({\n      typingText: typingText\n    });\n    this.resetTest();\n  }\n\n  handleNextTextCallback(){\n    if(this.state.typingText.length === 0){\n      this.setState({\n        typingText: this.state.sampleTexts[0]\n      });\n    }\n    else{\n      this.setState({\n        typingText: this.state.sampleTexts[this.state.sampleTextsIndex],\n        sampleTextsIndex: (this.state.sampleTextsIndex === this.state.sampleTexts.length - 1) ? 0 : this.state.sampleTextsIndex + 1\n      });\n    }\n    this.resetTest();\n  }\n  // 'rgb(34, 34, 34);'\n  darkModeCallback(){\n    \n    // document.documentElement.setAttribute(\"style\", \"--shade-1: rgb(34, 34, 34);\");\n    // let rs = getComputedStyle(r)\n    // console.log(rs.getPropertyValue('--page-color'))\n  }\n\n  render(){\n    return(\n      <>\n        <ToggleLight\n        darkModeCallback={this.darkModeCallback.bind(this)}\n        />\n        <div className=\"main-content\">\n          <Header\n          wpm={this.state.wpm}\n          accuracy={this.state.accuracy}\n          handlePasteCallback={this.handlePasteCallback.bind(this)}\n          handleNextTextCallback={this.handleNextTextCallback.bind(this)}\n          />\n          \n          <TypingBox\n          input={this.state.input}\n          typingText={this.state.typingText}\n          seconds={this.state.seconds}\n          handledErrors={this.state.handledErrors}\n          runTimer={this.state.runTimer}\n\n          toggleRunTimerCallback={this.toggleRunTimerCallback.bind(this)}\n          inputCallback={this.inputCallback.bind(this)}\n          errorsCallback={this.errorsCallback.bind(this)}\n          handledErrorsCallback={this.handledErrorsCallback.bind(this)}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nReactDOM.render(\n  <Main />,\n  document.getElementById('root')\n);"],"sourceRoot":""}